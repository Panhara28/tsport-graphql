extend type Query {
  me: Me @auth(public: true)
  adminMe(websiteId: Int, clientToken: String): Me @auth(roles: ["ADMIN", "SUPER_ADMIN"])
}

extend type Mutation {
  signIn(input: SignInInput): Token @auth(public: true)
  signOut(token: String!): Boolean @auth(public: true)
  signInSuperAdmin(input: SignInInput): Token @auth(public: true)
  signOutSuperAdmin(token: String!): Boolean @auth(public: true)
  changePassword(password: String!): Boolean @auth(roles: ["ADMIN", "SUPER_ADMIN"])
}

input SignInInput {
  username: String!
  password: String!
}

type Token {
  token: String
}

type Me {
  id: Int
  username: String
  fullname: String
  profilePicture: String
  roleName: String
  contact_district: String
  contact_commune: String
  contact_city_or_province: String
  contact_village: String
  phoneNumber: String
  email: String
  roleId: Int
  access: RoleAccess
}
