extend type Query {
  websiteList: WebsiteList
  website(id: Int): Website
  installedPluginList(websiteId: Int!): [InstalledPluginProps]
  addedPeopleList(websiteId: Int!): [AddedPeople]
}

extend type Mutation {
  createWebsite(input: WebsiteInput): Int
  updateWebsite(id: Int!, input: WebsiteInput): Boolean
  adminAddPeopleToWebsite(websiteId: Int!, input: [UserInputId]): Boolean
  addPeopleToWebsite(websiteId: Int!, input: [UserInputId]): Boolean
  addPluginToWebsite(websiteId: Int!, input: PluginInputId): Boolean
  uninstallPlugin(websiteId: Int!, pluginId: Int!): Boolean
  removePeopleFromWebsite(userId: Int!, websiteId: Int!): Boolean
  assignRoleToUser(userId: Int!, websiteId: Int!, roleId: Int!): Int!
  adminAssignRoleToUser(userId: Int!, websiteId: Int!, roleId: Int!): Int!
  installPluginToUser(websiteId: Int!, pluginId: Int!, userId: Int!): Boolean
  adminUpdateWebsite(id: Int!, input: WebsiteInput): Boolean
}

type WebsiteList {
  data: [Website]
}

type Website {
  id: Int
  name: String
  description: String
  website_logo: String
  facebook_link: String
  telegram_link: String
}

input WebsiteInput {
  name: String
  description: String
  website_logo: String
  facebook_link: String
  telegram_link: String
}

input UserInputId {
  userId: Int
}

input PluginInputId {
  pluginId: Int
}

type InstalledPluginProps {
  pluginId: Int
  pluginName: String
}

type AddedPeople {
  userId: Int
  fullName: String
}
